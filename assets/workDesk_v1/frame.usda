#usda 1.0
(
    defaultPrim = "Frame"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Frame" (
    kind = "component"
)
{
    quatf xformOp:orient = (1, 0, 0, 0)
    float3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Scope "Looks"
    {
        def Material "frame_Material"
        {
            token outputs:mdl:displacement.connect = </Frame/Looks/frame_Material/frame_Shader.outputs:out>
            token outputs:mdl:surface.connect = </Frame/Looks/frame_Material/frame_Shader.outputs:out>
            token outputs:mdl:volume.connect = </Frame/Looks/frame_Material/frame_Shader.outputs:out>

            def Shader "frame_Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @OmniPBR.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "OmniPBR"
                color3f inputs:diffuse_color_constant = (0.09, 0.08, 0.08) (
                    customData = {
                        float3 default = (0.09, 0.08, 0.08)
                        dictionary range = {
                            float3 max = (1, 1, 1)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Albedo"
                    displayName = "Base Color"
                    doc = "This is the albedo base color"
                    hidden = false
                    renderType = "color"
                )
                color3f inputs:emissive_color = (1, 1, 1) (
                    customData = {
                        float3 default = (1, 1, 1)
                        dictionary range = {
                            float3 max = (1, 1, 1)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Color"
                )
                float inputs:emissive_intensity = 10000 (
                    customData = {
                        float default = 10000
                        dictionary range = {
                            float max = 100000
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                )
                bool inputs:enable_emission = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                )
                bool inputs:enable_opacity = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Opacity"
                    displayName = "Enable Opacity"
                )
                bool inputs:enable_opacity_texture = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Opacity"
                    displayName = "Enable Opacity Texture"
                )
                float inputs:opacity_constant = 1 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Opacity"
                    displayName = "Opacity Amount"
                )
                int inputs:opacity_mode = 1 (
                    customData = {
                        int default = 1
                        dictionary range = {
                            int max = 3
                            int min = 0
                        }
                    }
                    displayGroup = "Opacity"
                    displayName = "Opacity Mono Source"
                    renderType = "::base::mono_mode"
                    sdrMetadata = {
                        string __SDR__enum_value = "mono_average"
                        string options = "mono_alpha:0|mono_average:1|mono_luminance:2|mono_maximum:3"
                    }
                )
                float inputs:opacity_threshold = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Opacity"
                    displayName = "Opacity Threshold"
                )
                float inputs:texture_rotate = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 360
                            float min = 0
                        }
                    }
                    displayGroup = "UV"
                    displayName = "Texture Rotate"
                )
                float2 inputs:texture_scale = (1, 1) (
                    customData = {
                        float2 default = (1, 1)
                    }
                    displayGroup = "UV"
                    displayName = "Texture Scale"
                )
                float2 inputs:texture_translate = (0, 0) (
                    customData = {
                        float2 default = (0, 0)
                    }
                    displayGroup = "UV"
                    displayName = "Texture Translate"
                )
                token outputs:out
            }
        }
    }

    def Xform "node_"
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Mesh "mesh_" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            float3[] extent = [(-0.6096, -0.4572, 0), (0.6096, 0.4572, 0.7366)]
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599]
            rel material:binding = </Frame/Looks/frame_Material>
            normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (-0, 1, 0), (-0, 1, 0), (-0, 1, 0), (-0, 1, 0), (-0, 1, 0), (-0, 1, 0), (0, -0, 1), (0, -0, 1), (0, -0, 1), (0, -0, 1), (0, -0, 1), (0, -0, 1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, 0, 1), (-0, 0, 1), (-0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-0, 1, 0), (-0, 1, 0), (-0, 1, 0), (-0, 1, 0), (-0, 1, 0), (-0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, -0, 1), (0, -0, 1), (0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-0, 0, 1), (-0, 0, 1), (-0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, -0, 1), (0, -0, 1), (0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, 0), (-1, -0, 0), (-1, -0, 0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, -0, -0), (1, -0, -0), (1, -0, -0), (1, -0, 0), (1, -0, 0), (1, -0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0, 1, -0), (-0, 1, -0), (-0, 1, -0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-0, 0, 1), (-0, 0, 1), (-0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, 0), (-1, -0, 0), (-1, -0, 0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-1, -0, 0), (-1, -0, 0), (-1, -0, 0), (-1, -0, -0), (-1, -0, -0), (-1, -0, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (0, -0, -1), (0, -0, -1), (0, -0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0, 0, -1), (-0, 0, -1), (-0, 0, -1), (-0, 0, -1), (-0, 0, -1), (-0, 0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -1, -0), (-0, -1, -0), (-0, -1, -0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, 1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1), (-0, -0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.5896, -0.109685935, 0.02), (-0.6096, -0.109685935, 0.02), (-0.5896, -0.109685935, 0.7164364), (-0.6096, -0.109685935, 0.02), (-0.6096, -0.109685935, 0.7366), (-0.5896, -0.109685935, 0.7164364), (-0.5896, -0.109685935, 0.7164364), (-0.6096, -0.109685935, 0.7366), (0.5896, -0.109685935, 0.7164364), (-0.6096, -0.109685935, 0.7366), (0.6096, -0.109685935, 0.7366), (0.5896, -0.109685935, 0.7164364), (0.5896, -0.109685935, 0.7164364), (0.6096, -0.109685935, 0.7366), (0.5896, -0.109685935, 0.02), (0.6096, -0.109685935, 0.7366), (0.6096, -0.109685935, 0.02), (0.5896, -0.109685935, 0.02), (0.6096, -0.12968594, 0.7366), (0.6096, -0.109685935, 0.7366), (-0.6096, -0.12968594, 0.7366), (0.6096, -0.109685935, 0.7366), (-0.6096, -0.109685935, 0.7366), (-0.6096, -0.12968594, 0.7366), (0.5896, -0.1778, 0.02), (0.5896, -0.1978, 0.02), (0.4264, -0.1778, 0.02), (0.5896, -0.1978, 0.02), (0.4264, -0.1978, 0.02), (0.4264, -0.1778, 0.02), (0.5896, -0.2594, 0.02), (0.5896, -0.2794, 0.02), (0.4264, -0.2594, 0.02), (0.5896, -0.2794, 0.02), (0.4264, -0.2794, 0.02), (0.4264, -0.2594, 0.02), (0.6096, -0.2794, 0.02), (0.6096, -0.4572, 0.02), (0.6096, -0.4572, 0), (0.6096, -0.4572, 0), (0.6096, 0.4572, 0), (0.6096, -0.109685935, 0.02), (0.6096, 0.4572, 0), (0.6096, 0.4572, 0.02), (0.6096, -0.109685935, 0.02), (0.6096, -0.1778, 0.02), (0.6096, -0.4572, 0), (0.6096, -0.12968594, 0.02), (0.6096, -0.4572, 0), (0.6096, -0.109685935, 0.02), (0.6096, -0.12968594, 0.02), (0.6096, -0.12968594, 0.02), (0.6096, -0.109685935, 0.02), (0.6096, -0.12968594, 0.7366), (0.6096, -0.109685935, 0.02), (0.6096, -0.109685935, 0.7366), (0.6096, -0.12968594, 0.7366), (0.6096, -0.2594, 0.02), (0.6096, -0.2594, 0.04), (0.6096, -0.2794, 0.04), (0.6096, -0.2794, 0.04), (0.6096, -0.2794, 0.02), (0.6096, -0.2594, 0.02), (0.6096, -0.2794, 0.02), (0.6096, -0.4572, 0), (0.6096, -0.2594, 0.02), (0.6096, -0.2594, 0.02), (0.6096, -0.4572, 0), (0.6096, -0.1978, 0.02), (0.6096, -0.4572, 0), (0.6096, -0.1778, 0.02), (0.6096, -0.1978, 0.02), (0.6096, -0.1978, 0.02), (0.6096, -0.1778, 0.02), (0.6096, -0.1978, 0.04), (0.6096, -0.1778, 0.02), (0.6096, -0.1778, 0.04), (0.6096, -0.1978, 0.04), (0.6096, -0.4572, 0.02), (0.5896, -0.4572, 0.02), (0.6096, -0.4572, 0), (0.5896, -0.4572, 0.02), (0.5896, -0.4572, 0), (0.6096, -0.4572, 0), (-0.5896, -0.4572, 0.02), (-0.6096, -0.4572, 0.02), (-0.5896, -0.4572, 0), (-0.6096, -0.4572, 0.02), (-0.6096, -0.4572, 0), (-0.5896, -0.4572, 0), (-0.6096, -0.12968594, 0.02), (-0.6096, -0.1778, 0.02), (-0.5896, -0.12968594, 0.02), (-0.6096, -0.1778, 0.02), (-0.5896, -0.1778, 0.02), (-0.5896, -0.12968594, 0.02), (0.4064, -0.4572, 0.02), (0.4264, -0.4572, 0.02), (0.4064, -0.2794, 0.02), (0.4264, -0.4572, 0.02), (0.4264, -0.2794, 0.02), (0.4064, -0.2794, 0.02), (-0.4264, -0.4572, 0.02), (-0.4064, -0.4572, 0.02), (-0.4264, -0.2794, 0.02), (-0.4064, -0.4572, 0.02), (-0.4064, -0.2794, 0.02), (-0.4264, -0.2794, 0.02), (-0.6096, 0.4572, 0.02), (0.6096, 0.4572, 0.02), (-0.6096, 0.4572, 0), (0.6096, 0.4572, 0.02), (0.6096, 0.4572, 0), (-0.6096, 0.4572, 0), (-0.6096, -0.4572, 0.02), (-0.5896, -0.4572, 0.02), (-0.6096, -0.2794, 0.02), (-0.5896, -0.4572, 0.02), (-0.5896, -0.2794, 0.02), (-0.6096, -0.2794, 0.02), (0.5896, -0.1978, 0.02), (0.6096, -0.1978, 0.02), (0.6096, -0.1978, 0.04), (-0.6096, -0.1978, 0.02), (-0.5896, -0.1978, 0.02), (-0.6096, -0.1978, 0.04), (-0.5896, -0.1978, 0.02), (-0.4264, -0.1978, 0.02), (-0.6096, -0.1978, 0.04), (-0.4264, -0.1978, 0.02), (-0.4064, -0.1978, 0.02), (-0.6096, -0.1978, 0.04), (-0.4064, -0.1978, 0.02), (0.4064, -0.1978, 0.02), (-0.6096, -0.1978, 0.04), (-0.6096, -0.1978, 0.04), (0.4064, -0.1978, 0.02), (0.6096, -0.1978, 0.04), (0.4064, -0.1978, 0.02), (0.4264, -0.1978, 0.02), (0.6096, -0.1978, 0.04), (0.6096, -0.1978, 0.04), (0.4264, -0.1978, 0.02), (0.5896, -0.1978, 0.02), (0.5896, -0.2594, 0.02), (0.6096, -0.2594, 0.02), (0.5896, -0.1978, 0.02), (0.6096, -0.2594, 0.02), (0.6096, -0.1978, 0.02), (0.5896, -0.1978, 0.02), (-0.4264, -0.1778, 0.02), (-0.4264, -0.1978, 0.02), (-0.5896, -0.1778, 0.02), (-0.4264, -0.1978, 0.02), (-0.5896, -0.1978, 0.02), (-0.5896, -0.1778, 0.02), (0.6096, -0.2594, 0.04), (0.6096, -0.2594, 0.02), (0.5896, -0.2594, 0.02), (-0.4064, -0.2594, 0.02), (-0.6096, -0.2594, 0.04), (0.4064, -0.2594, 0.02), (-0.6096, -0.2594, 0.04), (0.6096, -0.2594, 0.04), (0.4064, -0.2594, 0.02), (0.4064, -0.2594, 0.02), (0.6096, -0.2594, 0.04), (0.4264, -0.2594, 0.02), (0.6096, -0.2594, 0.04), (0.5896, -0.2594, 0.02), (0.4264, -0.2594, 0.02), (-0.4064, -0.2594, 0.02), (-0.4264, -0.2594, 0.02), (-0.6096, -0.2594, 0.04), (-0.4264, -0.2594, 0.02), (-0.5896, -0.2594, 0.02), (-0.6096, -0.2594, 0.04), (-0.6096, -0.2594, 0.04), (-0.5896, -0.2594, 0.02), (-0.6096, -0.2594, 0.02), (-0.4064, -0.1978, 0.02), (-0.4064, -0.4572, 0), (-0.4064, -0.1778, 0.02), (-0.4064, -0.4572, 0), (-0.4064, 0.42802063, 0), (-0.4064, -0.1778, 0.02), (-0.4064, -0.1778, 0.02), (-0.4064, 0.42802063, 0), (-0.4064, 0.42802063, 0.02), (-0.4064, -0.1978, 0.02), (-0.4064, -0.2594, 0.02), (-0.4064, -0.4572, 0), (-0.4064, -0.2594, 0.02), (-0.4064, -0.2794, 0.02), (-0.4064, -0.4572, 0), (-0.4064, -0.4572, 0), (-0.4064, -0.2794, 0.02), (-0.4064, -0.4572, 0.02), (-0.6096, 0.4572, 0.02), (-0.6096, -0.109685935, 0.02), (-0.5896, -0.109685935, 0.02), (-0.4264, -0.1778, 0.02), (-0.4064, -0.1778, 0.02), (-0.4264, 0.42802063, 0.02), (-0.4064, -0.1778, 0.02), (-0.4064, 0.42802063, 0.02), (-0.4264, 0.42802063, 0.02), (-0.5896, -0.109685935, 0.02), (-0.5896, 0.42802063, 0.02), (-0.6096, 0.4572, 0.02), (-0.5896, 0.42802063, 0.02), (-0.4264, 0.42802063, 0.02), (-0.6096, 0.4572, 0.02), (-0.6096, 0.4572, 0.02), (-0.4264, 0.42802063, 0.02), (0.6096, 0.4572, 0.02), (-0.4264, 0.42802063, 0.02), (-0.4064, 0.42802063, 0.02), (0.6096, 0.4572, 0.02), (0.6096, 0.4572, 0.02), (-0.4064, 0.42802063, 0.02), (0.4064, 0.42802063, 0.02), (0.5896, -0.109685935, 0.02), (0.6096, -0.109685935, 0.02), (0.5896, 0.42802063, 0.02), (0.6096, -0.109685935, 0.02), (0.6096, 0.4572, 0.02), (0.5896, 0.42802063, 0.02), (0.5896, 0.42802063, 0.02), (0.6096, 0.4572, 0.02), (0.4264, 0.42802063, 0.02), (0.6096, 0.4572, 0.02), (0.4064, 0.42802063, 0.02), (0.4264, 0.42802063, 0.02), (0.4264, 0.42802063, 0.02), (0.4064, 0.42802063, 0.02), (0.4264, -0.1778, 0.02), (0.4064, 0.42802063, 0.02), (0.4064, -0.1778, 0.02), (0.4264, -0.1778, 0.02), (0.5896, -0.12968594, 0.02), (0.6096, -0.12968594, 0.02), (0.5896, -0.12968594, 0.7164364), (0.6096, -0.12968594, 0.02), (0.6096, -0.12968594, 0.7366), (0.5896, -0.12968594, 0.7164364), (0.5896, -0.12968594, 0.7164364), (0.6096, -0.12968594, 0.7366), (-0.5896, -0.12968594, 0.7164364), (0.6096, -0.12968594, 0.7366), (-0.6096, -0.12968594, 0.7366), (-0.5896, -0.12968594, 0.7164364), (-0.5896, -0.12968594, 0.7164364), (-0.6096, -0.12968594, 0.7366), (-0.5896, -0.12968594, 0.02), (-0.6096, -0.12968594, 0.7366), (-0.6096, -0.12968594, 0.02), (-0.5896, -0.12968594, 0.02), (-0.4264, -0.4572, 0.02), (-0.4264, -0.2794, 0.02), (-0.4264, -0.4572, 0), (-0.4264, -0.2794, 0.02), (-0.4264, -0.2594, 0.02), (-0.4264, -0.4572, 0), (-0.4264, 0.42802063, 0.02), (-0.4264, 0.42802063, 0), (-0.4264, -0.1778, 0.02), (-0.4264, 0.42802063, 0), (-0.4264, -0.4572, 0), (-0.4264, -0.1778, 0.02), (-0.4264, -0.1778, 0.02), (-0.4264, -0.4572, 0), (-0.4264, -0.1978, 0.02), (-0.4264, -0.4572, 0), (-0.4264, -0.2594, 0.02), (-0.4264, -0.1978, 0.02), (0.5896, -0.1778, 0.02), (0.6096, -0.1778, 0.02), (0.5896, -0.12968594, 0.02), (0.6096, -0.1778, 0.02), (0.6096, -0.12968594, 0.02), (0.5896, -0.12968594, 0.02), (-0.5896, -0.109685935, 0.7164364), (-0.5896, -0.12968594, 0.7164364), (-0.5896, -0.109685935, 0.02), (-0.5896, -0.12968594, 0.7164364), (-0.5896, -0.12968594, 0.02), (-0.5896, -0.109685935, 0.02), (-0.5896, 0.42802063, 0.02), (-0.5896, -0.109685935, 0.02), (-0.5896, 0.42802063, 0), (-0.5896, -0.109685935, 0.02), (-0.5896, -0.12968594, 0.02), (-0.5896, 0.42802063, 0), (-0.5896, 0.42802063, 0), (-0.5896, -0.12968594, 0.02), (-0.5896, -0.4572, 0), (-0.5896, -0.12968594, 0.02), (-0.5896, -0.1778, 0.02), (-0.5896, -0.4572, 0), (-0.5896, -0.4572, 0), (-0.5896, -0.1778, 0.02), (-0.5896, -0.1978, 0.02), (-0.5896, -0.1978, 0.02), (-0.5896, -0.2594, 0.02), (-0.5896, -0.4572, 0), (-0.5896, -0.2594, 0.02), (-0.5896, -0.2794, 0.02), (-0.5896, -0.4572, 0), (-0.5896, -0.4572, 0), (-0.5896, -0.2794, 0.02), (-0.5896, -0.4572, 0.02), (0.4264, -0.1978, 0.02), (0.4264, -0.4572, 0), (0.4264, -0.1778, 0.02), (0.4264, -0.4572, 0), (0.4264, 0.42802063, 0), (0.4264, -0.1778, 0.02), (0.4264, -0.1778, 0.02), (0.4264, 0.42802063, 0), (0.4264, 0.42802063, 0.02), (0.4264, -0.1978, 0.02), (0.4264, -0.2594, 0.02), (0.4264, -0.4572, 0), (0.4264, -0.2594, 0.02), (0.4264, -0.2794, 0.02), (0.4264, -0.4572, 0), (0.4264, -0.4572, 0), (0.4264, -0.2794, 0.02), (0.4264, -0.4572, 0.02), (0.6096, -0.1778, 0.04), (0.6096, -0.1778, 0.02), (0.5896, -0.1778, 0.02), (-0.4064, -0.1778, 0.02), (-0.6096, -0.1778, 0.04), (0.4064, -0.1778, 0.02), (-0.6096, -0.1778, 0.04), (0.6096, -0.1778, 0.04), (0.4064, -0.1778, 0.02), (0.4064, -0.1778, 0.02), (0.6096, -0.1778, 0.04), (0.4264, -0.1778, 0.02), (0.6096, -0.1778, 0.04), (0.5896, -0.1778, 0.02), (0.4264, -0.1778, 0.02), (-0.4064, -0.1778, 0.02), (-0.4264, -0.1778, 0.02), (-0.6096, -0.1778, 0.04), (-0.4264, -0.1778, 0.02), (-0.5896, -0.1778, 0.02), (-0.6096, -0.1778, 0.04), (-0.6096, -0.1778, 0.04), (-0.5896, -0.1778, 0.02), (-0.6096, -0.1778, 0.02), (-0.4264, -0.2594, 0.02), (-0.4064, -0.2594, 0.02), (-0.4264, -0.1978, 0.02), (-0.4064, -0.2594, 0.02), (-0.4064, -0.1978, 0.02), (-0.4264, -0.1978, 0.02), (-0.6096, -0.1778, 0.04), (-0.6096, -0.1978, 0.04), (0.6096, -0.1778, 0.04), (-0.6096, -0.1978, 0.04), (0.6096, -0.1978, 0.04), (0.6096, -0.1778, 0.04), (-0.6096, -0.2594, 0.02), (-0.5896, -0.2594, 0.02), (-0.6096, -0.1978, 0.02), (-0.5896, -0.2594, 0.02), (-0.5896, -0.1978, 0.02), (-0.6096, -0.1978, 0.02), (0.4064, -0.2594, 0.02), (0.4264, -0.2594, 0.02), (0.4064, -0.1978, 0.02), (0.4264, -0.2594, 0.02), (0.4264, -0.1978, 0.02), (0.4064, -0.1978, 0.02), (-0.6096, -0.109685935, 0.02), (-0.6096, 0.4572, 0.02), (-0.6096, 0.4572, 0), (-0.6096, -0.1978, 0.02), (-0.6096, -0.1978, 0.04), (-0.6096, -0.1778, 0.04), (-0.6096, -0.12968594, 0.02), (-0.6096, -0.12968594, 0.7366), (-0.6096, -0.109685935, 0.7366), (-0.6096, 0.4572, 0), (-0.6096, -0.4572, 0), (-0.6096, -0.2794, 0.02), (-0.6096, -0.4572, 0), (-0.6096, -0.4572, 0.02), (-0.6096, -0.2794, 0.02), (-0.6096, -0.109685935, 0.7366), (-0.6096, -0.109685935, 0.02), (-0.6096, -0.12968594, 0.02), (-0.6096, -0.109685935, 0.02), (-0.6096, 0.4572, 0), (-0.6096, -0.12968594, 0.02), (-0.6096, -0.12968594, 0.02), (-0.6096, 0.4572, 0), (-0.6096, -0.1778, 0.02), (-0.6096, -0.2794, 0.04), (-0.6096, -0.2594, 0.04), (-0.6096, -0.2794, 0.02), (-0.6096, -0.2594, 0.04), (-0.6096, -0.2594, 0.02), (-0.6096, -0.2794, 0.02), (-0.6096, -0.2794, 0.02), (-0.6096, -0.2594, 0.02), (-0.6096, 0.4572, 0), (-0.6096, -0.2594, 0.02), (-0.6096, -0.1978, 0.02), (-0.6096, 0.4572, 0), (-0.6096, 0.4572, 0), (-0.6096, -0.1978, 0.02), (-0.6096, -0.1778, 0.02), (-0.6096, -0.1978, 0.02), (-0.6096, -0.1778, 0.04), (-0.6096, -0.1778, 0.02), (-0.4264, 0.42802063, 0.02), (-0.5896, 0.42802063, 0.02), (-0.4264, 0.42802063, 0), (-0.5896, 0.42802063, 0.02), (-0.5896, 0.42802063, 0), (-0.4264, 0.42802063, 0), (-0.4064, -0.4572, 0.02), (-0.4264, -0.4572, 0.02), (-0.4064, -0.4572, 0), (-0.4264, -0.4572, 0.02), (-0.4264, -0.4572, 0), (-0.4064, -0.4572, 0), (0.4064, -0.4572, 0.02), (0.4064, -0.2794, 0.02), (0.4064, -0.4572, 0), (0.4064, -0.2794, 0.02), (0.4064, -0.2594, 0.02), (0.4064, -0.4572, 0), (0.4064, 0.42802063, 0.02), (0.4064, 0.42802063, 0), (0.4064, -0.1778, 0.02), (0.4064, 0.42802063, 0), (0.4064, -0.4572, 0), (0.4064, -0.1778, 0.02), (0.4064, -0.1778, 0.02), (0.4064, -0.4572, 0), (0.4064, -0.1978, 0.02), (0.4064, -0.4572, 0), (0.4064, -0.2594, 0.02), (0.4064, -0.1978, 0.02), (0.4064, 0.42802063, 0.02), (-0.4064, 0.42802063, 0.02), (0.4064, 0.42802063, 0), (-0.4064, 0.42802063, 0.02), (-0.4064, 0.42802063, 0), (0.4064, 0.42802063, 0), (0.5896, -0.4572, 0), (0.5896, -0.4572, 0.02), (0.5896, -0.2794, 0.02), (0.5896, -0.12968594, 0.7164364), (0.5896, -0.109685935, 0.7164364), (0.5896, -0.12968594, 0.02), (0.5896, -0.109685935, 0.7164364), (0.5896, -0.109685935, 0.02), (0.5896, -0.12968594, 0.02), (0.5896, -0.2794, 0.02), (0.5896, -0.2594, 0.02), (0.5896, -0.4572, 0), (0.5896, -0.2594, 0.02), (0.5896, -0.1978, 0.02), (0.5896, -0.4572, 0), (0.5896, -0.4572, 0), (0.5896, -0.1978, 0.02), (0.5896, -0.1778, 0.02), (0.5896, 0.42802063, 0.02), (0.5896, 0.42802063, 0), (0.5896, -0.109685935, 0.02), (0.5896, 0.42802063, 0), (0.5896, -0.4572, 0), (0.5896, -0.109685935, 0.02), (0.5896, -0.109685935, 0.02), (0.5896, -0.4572, 0), (0.5896, -0.12968594, 0.02), (0.5896, -0.4572, 0), (0.5896, -0.1778, 0.02), (0.5896, -0.12968594, 0.02), (0.4264, -0.4572, 0.02), (0.4064, -0.4572, 0.02), (0.4264, -0.4572, 0), (0.4064, -0.4572, 0.02), (0.4064, -0.4572, 0), (0.4264, -0.4572, 0), (-0.5896, -0.109685935, 0.7164364), (0.5896, -0.109685935, 0.7164364), (-0.5896, -0.12968594, 0.7164364), (0.5896, -0.109685935, 0.7164364), (0.5896, -0.12968594, 0.7164364), (-0.5896, -0.12968594, 0.7164364), (0.5896, 0.42802063, 0.02), (0.4264, 0.42802063, 0.02), (0.5896, 0.42802063, 0), (0.4264, 0.42802063, 0.02), (0.4264, 0.42802063, 0), (0.5896, 0.42802063, 0), (0.5896, -0.4572, 0.02), (0.6096, -0.4572, 0.02), (0.5896, -0.2794, 0.02), (0.6096, -0.4572, 0.02), (0.6096, -0.2794, 0.02), (0.5896, -0.2794, 0.02), (0.6096, 0.4572, 0), (0.6096, -0.4572, 0), (0.5896, -0.4572, 0), (0.4264, -0.4572, 0), (0.4064, -0.4572, 0), (0.4264, 0.42802063, 0), (0.4064, -0.4572, 0), (0.4064, 0.42802063, 0), (0.4264, 0.42802063, 0), (0.5896, -0.4572, 0), (0.5896, 0.42802063, 0), (0.6096, 0.4572, 0), (0.5896, 0.42802063, 0), (0.4264, 0.42802063, 0), (0.6096, 0.4572, 0), (0.6096, 0.4572, 0), (0.4264, 0.42802063, 0), (-0.6096, 0.4572, 0), (0.4264, 0.42802063, 0), (0.4064, 0.42802063, 0), (-0.6096, 0.4572, 0), (-0.6096, 0.4572, 0), (0.4064, 0.42802063, 0), (-0.4064, 0.42802063, 0), (-0.5896, -0.4572, 0), (-0.6096, -0.4572, 0), (-0.5896, 0.42802063, 0), (-0.6096, -0.4572, 0), (-0.6096, 0.4572, 0), (-0.5896, 0.42802063, 0), (-0.5896, 0.42802063, 0), (-0.6096, 0.4572, 0), (-0.4264, 0.42802063, 0), (-0.6096, 0.4572, 0), (-0.4064, 0.42802063, 0), (-0.4264, 0.42802063, 0), (-0.4264, 0.42802063, 0), (-0.4064, 0.42802063, 0), (-0.4264, -0.4572, 0), (-0.4064, 0.42802063, 0), (-0.4064, -0.4572, 0), (-0.4264, -0.4572, 0), (0.5896, -0.2794, 0.02), (0.6096, -0.2794, 0.02), (0.6096, -0.2794, 0.04), (-0.6096, -0.2794, 0.02), (-0.5896, -0.2794, 0.02), (-0.6096, -0.2794, 0.04), (-0.5896, -0.2794, 0.02), (-0.4264, -0.2794, 0.02), (-0.6096, -0.2794, 0.04), (-0.4264, -0.2794, 0.02), (-0.4064, -0.2794, 0.02), (-0.6096, -0.2794, 0.04), (-0.4064, -0.2794, 0.02), (0.4064, -0.2794, 0.02), (-0.6096, -0.2794, 0.04), (-0.6096, -0.2794, 0.04), (0.4064, -0.2794, 0.02), (0.6096, -0.2794, 0.04), (0.4064, -0.2794, 0.02), (0.4264, -0.2794, 0.02), (0.6096, -0.2794, 0.04), (0.6096, -0.2794, 0.04), (0.4264, -0.2794, 0.02), (0.5896, -0.2794, 0.02), (-0.4264, -0.2594, 0.02), (-0.4264, -0.2794, 0.02), (-0.5896, -0.2594, 0.02), (-0.4264, -0.2794, 0.02), (-0.5896, -0.2794, 0.02), (-0.5896, -0.2594, 0.02), (0.4064, -0.2594, 0.02), (0.4064, -0.2794, 0.02), (-0.4064, -0.2594, 0.02), (0.4064, -0.2794, 0.02), (-0.4064, -0.2794, 0.02), (-0.4064, -0.2594, 0.02), (-0.6096, -0.2794, 0.04), (0.6096, -0.2794, 0.04), (-0.6096, -0.2594, 0.04), (0.6096, -0.2794, 0.04), (0.6096, -0.2594, 0.04), (-0.6096, -0.2594, 0.04), (0.4064, -0.1778, 0.02), (0.4064, -0.1978, 0.02), (-0.4064, -0.1778, 0.02), (0.4064, -0.1978, 0.02), (-0.4064, -0.1978, 0.02), (-0.4064, -0.1778, 0.02)]
            uniform token subdivisionScheme = "none"
        }
    }
}

